create a copy method for the reference classes that not only copies the
contents but also creates a new C++ object and pointer.

serialization of reference classes:  Ensure that the external pointer
is reinitialized when the object is unserialized.

Use the additional arguments in creating the external pointers in the
C++ code so that the lifetime of the object is linked to an R object,
preferably y for a response object and X or Z for a predictor.

FIXME: *one*-argument version of anova() still does not work

--> Use  nobs() methods -- ASAP .. (require R >= 2.13.0 though)
-----
Do not profile out a common scale factor for any of the glm families.
This will remove the need for the useSc setting.
-----
Allow for the reModule class to inherit from predModule.  This will
involve changing the representation of the reModule classes to contain
Z rather than Zt, which may be a better idea anyway.
-----
Consider the steps in reimplementing AGQ.  First you need to find the
conditional modes, then evaluate the conditional variances, then step
out according to the conditional variance, evaluate the integrand
relative to the step.
----
Switch the deFeMod and spFeMod classes to inherit from the
corresponding predModule classes.  The coefficient vector is now
called "coef" instead of "beta".
-----
Switch the definition of the respModule updateMu method so that it
will add the offset to the input gamma.  The method for the linear
predictor module will return a Rcpp::NumericVector object rather than
updating a numeric vector.  Addition will be done externally.
-----
For the Poisson and Binomial families, set useSc to be FALSE.  Modify
the print and VarCorr methods to honor the useSc setting.
-----
Create the respModule and predModule classes. 
-----
Define reModule and feModule classes.
-----
Fix up the specifications of the result of getBounds.  It should be a
matrix with two columns.
-----
Find out why there is a .p at the end of the model names in the
printed value of anova with multiple arguments.
-----
Should there be an extractor function for the mean square error?  If
  so, what should it be called? (There is now a "sigma" extractor.)
-----
Determine why the names of the components of the values of
the ranef and coef extractor methods are not printed. (Done by
changing from S4 classes to S3 methods.)
-----
Collapse repeated grouping factors and correspondingly modify the
ranef and coef methods.
-----
Add an element to the deviance slot to hold sigma or log(sigma).  The
interpretation will be that an NA value means to use the conditional
estimate of the scale parameter.  For a generalized linear mixed model
without a scale parameter set sigma = 1 (or log(sigma) = 0) and put
constraints on the parameter so that it is not estimated.

Upon convergence replace that element with the conditional estimate in
models where it has been profiled out.
-----
Currently lmer does not fill in the disc and bqd slots in the deviance
slot.  Fix this.
-----
Remove unused symbols from src/Syms.h and src/init.c
Add symbols to src/Syms.h for names currently accessed through install().
Replace the glmer_create and nlmer_create C functions with R code.
-----
- Revive the "lmer" and "glmer" classes.  Slots like "family" should
  be in "glmer" only.  Many methods for "lmer" can be simplified as,
  for example, they will always use the scale factor.

- Add a "pedigree" class and methods for it.  Allow a pedigree
  argument in lmer.

- change the status vector to an integer vector.  The steps are
  cumulative so we only keep track of the stage.  Also REML and glmm
  are stored here.

- anova method for lmer objects.  Will entail saving the terms
  attribute.

- Move large data sets into a MEMSS or mlmRev package

- Change Calloc/Free patterns in the calculation of bVar

- Re-write the ccoef methods in C

- Evaluate the likelihood of a fitted GLMM by the Laplacian approximation

---------------------
Provide methods for lmer2() aka the "[gln]merMod" classes based one the
"mer" / "merenv" ones

 o Now done for  anova, coef, isREML, update, model.matrix, model.frame, terms
