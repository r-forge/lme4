useDynLib(lme4a, .registration=TRUE)

import(grid)
import(lattice)
import(splines)
importFrom(graphics, plot)
importFrom(nlme, BIC, fixef, ranef, VarCorr)
importFrom(stats, AIC,  coef, confint, logLik, profile, vcov,
           anova, deviance, formula,
           model.frame, model.matrix, predict,
           resid, residuals, simulate, terms)
#importFrom(Matrix, Cholesky)
importClassesFrom(Matrix, dgeMatrix, dgCMatrix, dsCMatrix, dpoMatrix,
	      dCHMsuper, dCHMsimpl, corMatrix)

importMethodsFrom(Matrix, coerce, chol, "%*%", crossprod, tcrossprod,
                  Cholesky, determinant, diag, as.vector, solve,
                  chol2inv, diag, summary, update)


export(VarCorr, copyMerenv, devcomp, env, getBounds, getPars, glmer,
       lmList, lmer, nlmer, setPars, sigma,
       findbars, nobars, subbars, isNested)

exportClasses(lmList,
	      ## export all super classes of e.g., "lmerenv",
	      ## so users can query the class system :
	      optenv, merenv, merenvtrms, lmerenv, glmerenv)

exportMethods(VarCorr, anova, coef, confint, deviance,
              fixef, formula, getBounds, getPars, logLik,
              model.frame, model.matrix, plot, print, profile,
              ranef, setPars, show, sigma,
              summary, terms, update, vcov)

S3method(plot, coef.mer)
S3method(dotplot, coef.mer)
S3method(plot, ranef.mer)
S3method(qqmath, ranef.mer)
S3method(dotplot, ranef.mer)
S3method(xyplot, thpr)
S3method(confint, thpr)
S3method(splom, thpr)
S3method(log, thpr)
